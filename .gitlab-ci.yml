image: rust:latest

variables:
  CARGO_INCREMENTAL: "0"
  RUST_BACKTRACE: "full"

stages:
  - build

before_script:
  - apt-get update
  - apt-get install -y gcc-aarch64-linux-gnu gcc-riscv64-linux-gnu musl-tools libc6-dev-riscv64-cross gcc-arm-linux-gnueabihf

rust-latest:
  stage: build
  script:
    - rustup default stable
    - cargo build --verbose
    - cargo test --verbose
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

rust-nightly:
  stage: build
  image: rust:nightly
  script:
    - cargo build --verbose
    - cargo test --verbose
  allow_failure: true
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_COMMIT_BRANCH == "main"'

.build_template: &build_defaults
  stage: build
  script:
    - rustup target add $RUST_TARGET
    - RUSTFLAGS="-C target-feature=+crt-static" cargo build --target $RUST_TARGET --release
    - mv target/$RUST_TARGET/release/liol liol-$TRIPLE
    - mv target/$RUST_TARGET/release/librat.a librat.a
    - cargo build --target $RUST_TARGET --release --lib
    - mv target/$RUST_TARGET/release/librat.so librat.so
  artifacts:
    paths:
      - liol-$TRIPLE
      - librat.so
      - librat.a
      - librat.rlib
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'

build:linux:x86_64-musl:
  <<: *build_defaults
  variables:
    RUST_TARGET: x86_64-unknown-linux-musl
    TRIPLE: x86_64-linux-musl

build:linux:x86_64-gnu:
  <<: *build_defaults
  variables:
    RUST_TARGET: x86_64-unknown-linux-gnu
    TRIPLE: x86_64-linux-gnu

build:linux:aarch64:
  <<: *build_defaults
  variables:
    RUST_TARGET: aarch64-unknown-linux-gnu
    TRIPLE: aarch64-linux-gnu

build:linux:armv7:
  <<: *build_defaults
  variables:
    RUST_TARGET: armv7-unknown-linux-gnueabihf
    TRIPLE: arm-linux-gnueabihf

build:linux:riscv64:
  <<: *build_defaults
  variables:
    RUST_TARGET: riscv64gc-unknown-linux-gnu
    TRIPLE: riscv64-linux-gnu
